<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trouble Shooting on Wellphone&#39;s Blog</title>
    <link>https://wellphone.me/categories/trouble-shooting/</link>
    <description>Recent content in Trouble Shooting on Wellphone&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Fri, 25 Aug 2017 16:52:20 +0800</lastBuildDate>
    <atom:link href="/categories/trouble-shooting/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>腾讯Bugly的巨坑：使用不当会造成UI界面卡死</title>
      <link>https://wellphone.me/post/2017/bugly_dispatch_once_crash/</link>
      <pubDate>Fri, 25 Aug 2017 16:52:20 +0800</pubDate>
      
      <guid>https://wellphone.me/post/2017/bugly_dispatch_once_crash/</guid>
      <description>前言 Bugly和dispatch_once使用不当，会造成UI界面卡死。笔者在前段时间碰见了这样的一个卡死的情况，特意记录下来。
iOS开发者或多或少都听过或用过Bugly。它是腾讯开发的一个SDK，用来捕捉App中的crash。对于dispatch_once大家就更熟悉了，现在大部分开发者用这个来创建单例。如：
+ (SingletonA *)sharedInstance { static SingletonA *_singleton = nil; static dispatch_once_t once; dispatch_once(&amp;amp;once, ^{ _singleton = [[SingletonA alloc] init]; }); return _singleton; }  但是这两个在一起怎么会造成UI界面卡死呢？如果笔者不是亲眼所见，也不会相信Bugly会造成界面卡死。
现象 前几天碰见了这样一个情况，我们的App启动时有时候会卡在启动界面上，过一段时间 就会被系统杀掉，而且不会有Crash的堆栈。这个现象让我们开发很头疼，一旦出现就只能杀进程，重新启动App，并且还不知道是怎么回事。
调查 看到界面卡死的第一反应就是，是不是哪个地方死锁导致主线程阻塞了。使用Console.app查看App启动时的日志，没发现什么异常的情况，并且死锁这个在日志中查找起来比较麻烦。
好不容易复现这个情况后，赶紧把手机接上Mac，在Xcdoe中Attach我们App的进程，如图：
然后暂停下App进程，就可以看到当前所有线程的堆栈情况了。如图：
这下，我们才知道是卡在了dispatch_once这个地方。是我们的单例使用有问题吗？我们知道， 如果dispatch_once递归调用就会产生死锁。示例代码如下：
+ (SingletonA *)sharedInstance { static SingletonA *_singleton = nil; static dispatch_once_t once; dispatch_once(&amp;amp;once, ^{ _singleton = [[SingletonA alloc] init]; }); return _singleton; } - (instancetype)init { self = [super init]; if (self) { [self somethingInit]; // 这个方法里也调用了[SingletonA sharedInstance]，所以会产生死锁 } return self; } - (void)somethingInit { [SingletonA sharedInstance]; }  很有可能就是这个原因导致我们的App启动时卡死。于是我们开始排查dispatch_once的代码里会不会在某个条件下再次调用到相同的dispatch_once，形成递归调用，导致死锁。</description>
    </item>
    
    <item>
      <title>为什么支付宝SDK不显示H5支付页面</title>
      <link>https://wellphone.me/post/2017/why_can_not_open_alipay_h5_webview/</link>
      <pubDate>Tue, 11 Jul 2017 11:16:30 +0800</pubDate>
      
      <guid>https://wellphone.me/post/2017/why_can_not_open_alipay_h5_webview/</guid>
      <description>问题描述 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我们的App集成有微信支付、支付宝支付，前段时间一直工作的很好。但是最近我们测试组发现支付宝支付就不能打开H5的支付页面了，会一直在如下界面等待：
问题排查 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;首先想到的是支付宝SDK集成出了问题。但是试了下，如果手机上安装有支付宝，会跳转到支付宝应用，支付成功或者手动取消返回都能正常的跳回我们的App。安装有支付宝应用的手机的支付流程是没有问题，能正常工作。可以排除支付宝SDK集成应该没有问题，但是为什么在没有安装支付宝应用的手机上，H5的支付页面显示不出来呢？
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;是不是我们自己的页面上调用方法的原因？我们的支付下单页面也是一个web页面，native代码通过&amp;rdquo;WebViewJavascriptBridge&amp;rdquo; 这个库开了一个支付的接口给web页面调用。web页面调用alipay接口代码如下：
[bridge registerHandler:@&amp;quot;alipay&amp;quot; handler:^(id data, WVJBResponseCallback responseCallback) { NSLog(@&amp;quot;alipay called: %@&amp;quot;, data); // 调用支付宝接口支付 [AlipayUtil pay:data competion:^(PayResult reslut) { // 支付结果返回 responseCallback(@(result)); }]; }];  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我们详细比对了整个流程中打印出的日志，完全看不出任何问题，但H5的支付页面就是不能显示出来。怎么办？现在只有查找提交记录，看是哪次提交引起的。最后发现是在合入我们自己的聊天SDK后，H5的支付页面就不能正常工作了。到这里，笔者开始怀疑人生了，我们的聊天SDK完全没有和支付宝相关的东西啊，为什么会这样？
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;支付宝的H5支付页面也是一个webview，添加到我们的window之上的，会不会是没有显示，或者被挪到我们的view下面被盖住了？我们使用iOS自带悬浮窗调试工具使用详解中的View调试工具查看了一下，果然还是有些异常的：
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我们的App居然有两个window，选择另外一个window查看了一下，我靠，h5页面居然在这里：
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;总算找到这个消失的H5支付页面了，那么问题来了，为什么集成聊天的SDK后，会有两个window？
问题定位 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;找到了消失的H5支付页面后，问题变得清晰起来，可以确定的是支付宝SDK集成没有问题，我们web页面调用的native支付接口没有问题，问题出在集成聊天SDK后，出现了两个window，而支付宝SDK在显示H5支付页面时，把页面添加到另外一个window上了。在查看聊天SDK源码后发现了问题所在：
self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]]; self.window.rootViewController = [NavigationController rootViewController];; [self.window makeKeyAndVisible];  在聊天SDK初始化时，有这几行代码，然后就有两个window了~~~~~</description>
    </item>
    
    <item>
      <title>iOS如何正确的监听手机侧边音量键</title>
      <link>https://wellphone.me/post/2017/how_to_monitor_volume_changes/</link>
      <pubDate>Sat, 08 Jul 2017 22:28:48 +0800</pubDate>
      
      <guid>https://wellphone.me/post/2017/how_to_monitor_volume_changes/</guid>
      <description>如何监听手机侧边音量键 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我们的App有这样一个Feature，用户通过音量键调节到最大音量时，会弹出一个Toast，提示 用户当前音量已经最大了，继续按音量上键可以设置为超大音量模式（通过调节音频文件的音量）。刚开始，我们在App中是监听名称为“AVSystemController_SystemVolumeDidChangeNotification”的系统通知来获知用户通过侧边音量键调节手机音量的事件。
[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(onVolumeChanged:) name:@&amp;quot;AVSystemController_SystemVolumeDidChangeNotification&amp;quot; object:nil];  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;处理该通知的方法如下：
- (void)onVolumeChanged:(NSNotification *)notification { if ([[notification.userInfo objectForKey:@&amp;quot;AVSystemController_AudioCategoryNotificationParameter&amp;quot;] isEqualToString:@&amp;quot;Audio/Video&amp;quot;]) { if ([[notification.userInfo objectForKey:@&amp;quot;AVSystemController_AudioVolumeChangeReasonNotificationParameter&amp;quot;] isEqualToString:@&amp;quot;ExplicitVolumeChange&amp;quot;]) { CGFloat volume = [[notification.userInfo objectForKey:@&amp;quot;AVSystemController_AudioVolumeNotificationParameter&amp;quot;] floatValue]; if (volume != MAX_VOLUME) { // todo } else { // todo } } } }  发现问题 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这段代码在我们这个App中工作的一直很好。但是最近一段时间，测试人员编译版本，有时音量调节到最大后，没有弹出Toast提示，而有时又会弹出来。经调试，发现有时候能监听到“AVSystemController_SystemVolumeDidChangeNotification”系统通知，有时候又没有，很飘忽不定。一时间大家都不知道怎么回事，很是头疼。因为这个代码在之前发布出去的正式版本中，从来没有出现过这样的问题。
定位问题 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;以前版本没有，而现在的版本有，说明肯定是改出来的问题。只有checkout到之前的commit，逐一测试找出是哪次提交造成这样的问题。但是这样折腾了好久也没能定位到是哪次提交造成的。最后，折腾了一天，我们这边的一位美女同事Sharon最后解决了这个问题，她在stackoverflow上找到了类似的问题，发现是我们删除之前通过耳机线控App的一个Feature时，把这段代码删掉了造成的。而这段代码是开始监听远程控制事件。
[[UIApplication sharedApplication] beginReceivingRemoteControlEvents];  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Fuck！NSNotificationCenter监听的通知“AVSystemController_SystemVolumeDidChangeNotification”居然和RemoteControlEvents有关系，是因为耳机线上也有音量调节按键的原因？？？</description>
    </item>
    
  </channel>
</rss>
